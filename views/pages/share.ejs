<!-- views/pages/index.ejs -->

<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- views/partials/head.ejs -->
    <meta charset="UTF-8" />
    <meta name="theme-color" content="#000000" />
    <meta property="og:url" content="http://54.197.16.19/remotetorrent" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Easy Torrent" />
    <meta
      property="og:description"
      content="Your one click online torrent client"
    />
    <link rel="shortcut icon" type="image/png" href="/favicon.png" />

    <meta name="description" content="Your one click online torrent client" />
    <meta name="subject" content="Easy Torrent" />
    <meta name="url" content="http://54.197.16.19/remotetorrent" />
    <meta
      property="og:image"
      content="https://img.icons8.com/ios/500/000000/share-2.png"
    />
    <meta property="og:locale" content="si_LK" />
    <title>Easy Torrent</title>

    <!-- CSS (load bootstrap from a CDN) -->
    <link
      href="https://fonts.googleapis.com/css?family=Montserrat&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
      integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
      crossorigin="anonymous"
    />
    <style>
      body {
        padding-top: 50px;
        font-family: "Montserrat", sans-serif;
      }
      #progreebarouterdiv {
        display: none;
        padding: 2%;
        padding-left: 0%;
      }
    </style>

    <style></style>
  </head>
  <body class="container">
    <header>
      <nav class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
          <div class="navbar-header">
            <a class="navbar-brand" href="http://54.197.16.19/remotetorrent">
              <img src="https://img.icons8.com/ios/25/000000/share-2.png" />
              Easy Torrent
            </a>
          </div>
        </div>
      </nav>
    </header>

    <main>
      <div class="jumbotron">
        <!-- <h3>Enter file url to download</h3> -->

        <h3>We accept Torrent Magnet Link and Torrent file Url</h3>

        <form onsubmit="return mySubmitFunction(event)">
          <div class="form-group">
            <input
              placeholder="Enter Torrent Magnet Link or Torrent file Url"
              class="form-control"
              required
              type="text"
              id="down-url"
            />
          </div>
          <button onclick="download()" class="btn btn-primary" type="submit">
            Fetch
          </button>
        </form>

        <br />
        <div id="progreebarouterdiv">
          <div class="progress" id="download-progress-div">
            <div
              id="download-progress"
              class="progress-bar progress-bar-striped progress-bar-animated"
              role="progressbar"
              aria-valuemin="0"
              aria-valuemax="100"
            ></div>
          </div>
          <div>
            <span id="progresstext"></span>
          </div>
        </div>

        <div id="files"></div>

        <div id="resources">
          <!-- <a href="http://" target="_blank"></a> -->
        </div>

        <!-- <p>
          <a href="<%= resurl %>" class="btn btn-primary" role="button"
            >Download</a
          >
        </p> -->
      </div>
    </main>

    <footer>
      <!-- views/partials/footer.ejs -->
      <p class="text-center text-muted">Â© Copyright 2020 Easy Torrent .inc</p>
    </footer>
  </body>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
  <script src="https://cdn.rawgit.com/kimmobrunfeldt/progressbar.js/0.5.6/dist/progressbar.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
  <script>
    var socket = io();

    function download() {
      console.log("submit");
      // document.getElementById("progress").setAttribute("hidden", false);
      var url = document.getElementById("down-url").value;

      var obj = {
        urltodown: url
      };

      console.log(url);

      fetch("/remotetorrent/download", {
        method: "POST",
        body: JSON.stringify(obj),
        headers: {
          "Content-Type": "application/json"
          // 'Content-Type': 'application/x-www-form-urlencoded',
        }
      })
        .then(result => {
          return result.json();
        })
        .then(json => {
          console.log(json);

          var str2 = "";
          json.fileInfo.forEach(element => {
            str2 =
              str2 +
              ` <span  > ${
                element.name
              } </span> <span>                   Size : ${Math.round(
                element.size * 100
              ) / 100} mb  </span>  <br></br>`;
          });

          document.getElementById("files").innerHTML = str2;

          if (json.error) {
            console.log("err");
            console.log(json.error);
            // window.location.reload();
            if (json.error === "Invalid torrent identifier") {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "invalid torrent"
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Something went wrong!"
              });
            }
          } else {
            socket.on("downloadprogress" + json.uuid, function(msg) {
              console.log(msg);

              var progreebarouterdiv = document.getElementById(
                "progreebarouterdiv"
              );
              progreebarouterdiv.style.display = "block";

              var progressBar = document.getElementById("download-progress");
              progressBar.style.width = Math.round(msg.progress * 100) + "%";
              progressBar.setAttribute(
                "aria-valuenow",
                Math.round(msg.progress * 100) + "%"
              );

              document.getElementById("progresstext").innerHTML =
                Math.round(msg.progress * 100) + "%";
            });

            socket.on("torrenterror" + json.uuid, function(msg) {
              console.log(msg.error);
            });

            socket.on("downloaded" + json.uuid, function(msg) {
              console.log(msg);
              console.log("downloaded");

              var str = "";

              msg.path.forEach(element => {
                str =
                  str +
                  ` <a  href="${element.filepath}" target="_blank" >${element.name}</a>  <br></br>`;
              });

              document.getElementById("resources").innerHTML = str;
            });
          }
        })
        .catch(err => {
          console.log(err);
        });
    }

    function mySubmitFunction(e) {
      e.preventDefault();
      // someBug();
      return false;
    }
  </script>
</html>
